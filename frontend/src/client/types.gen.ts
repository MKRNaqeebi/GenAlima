// This file is auto-generated by @hey-api/openapi-ts

export type Body_login_login_access_token = {
  grant_type?: string | null
  username: string
  password: string
  scope?: string
  client_id?: string | null
  client_secret?: string | null
}

export type HTTPValidationError = {
  detail?: Array<ValidationError>
}

export type ItemCreate = {
  title: string
  description?: string | null
}

export type TemplateCreate = {
  title: string
  description?: string | null
  instructions?: string | null
  template?: string | null
  placeholder?: string | null
  model?: string | null
  connector?: string | null
  active?: boolean
}

export type ChatCreate = {
  title: string
  template_id?: string | null
}

export type MessageCreate = {
  role: string
  content: string
  chat_id?: string
}

export type ItemPublic = {
  title: string
  description?: string | null
  id: string
  owner_id: string
}

export type TemplatePublic = {
  title: string
  description?: string | null
  instructions?: string | null
  template?: string | null
  placeholder?: string | null
  model?: string | null
  connector?: string | null
  active?: boolean
  id: string
  owner_id: string
}

export type ChatPublic = {
  title: string
  template_id?: string | null
  id: string
  owner_id: string
}

export type MessagePublic = {
  role: string
  content: string
  chat_id?: string | null
  id: string
  owner_id: string
}

export type ItemsPublic = {
  data: Array<ItemPublic>
  count: number
}

export type TemplatesPublic = {
  data: Array<TemplatePublic>
  count: number
}

export type ChatsPublic = {
  data: Array<ChatPublic>
  count: number
}

export type MessagesPublic = {
  data: Array<MessagePublic>
  count: number
}

export type ItemUpdate = {
  title?: string | null
  description?: string | null
}

export type TemplateUpdate = {
  title?: string | null
  description?: string | null
  instructions?: string | null
  template?: string | null
  placeholder?: string | null
  model?: string | null
  connector?: string | null
  active?: boolean
}

export type ChatUpdate = {
  title?: string | null
  template_id?: string | null
}

export type MessageUpdate = {
  role?: string | null
  content?: string | null
  chat_id?: string | null
}

export type Message = {
  message: string
}

export type NewPassword = {
  token: string
  new_password: string
}

export type Token = {
  access_token: string
  token_type?: string
}

export type UpdatePassword = {
  current_password: string
  new_password: string
}

export type UserCreate = {
  email: string
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  password: string
}

export type UserPublic = {
  email: string
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  id: string
}

export type UserRegister = {
  email: string
  password: string
  full_name?: string | null
}

export type UsersPublic = {
  data: Array<UserPublic>
  count: number
}

export type UserUpdate = {
  email?: string | null
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  password?: string | null
}

export type UserUpdateMe = {
  full_name?: string | null
  email?: string | null
}

export type ValidationError = {
  loc: Array<string | number>
  msg: string
  type: string
}

export type ItemsReadItemsData = {
  limit?: number
  skip?: number
}

export type TemplatesReadTemplatesData = {
  limit?: number
  skip?: number
}

export type ChatsReadChatsData = {
  limit?: number
  skip?: number
}

export type MessagesReadMessagesData = {
  limit?: number
  skip?: number
}

export type ItemsReadItemsResponse = ItemsPublic

export type TemplatesReadTemplatesResponse = TemplatesPublic

export type ChatsReadChatsResponse = ChatsPublic

export type MessagesReadMessagesResponse = MessagesPublic

export type ItemsCreateItemData = {
  requestBody: ItemCreate
}

export type TemplatesCreateTemplateData = {
  requestBody: TemplateCreate
}

export type ChatsCreateChatData = {
  requestBody: ChatCreate
}

export type MessagesCreateMessageData = {
  requestBody: MessageCreate
}

export type ItemsCreateItemResponse = ItemPublic

export type TemplatesCreateTemplateResponse = TemplatePublic

export type ChatsCreateChatResponse = ChatPublic

export type MessagesCreateMessageResponse = MessagePublic

export type ItemsReadItemData = {
  id: string
}

export type TemplatesReadTemplateData = {
  id: string
}

export type ChatsReadChatData = {
  id: string
}

export type MessagesReadMessageData = {
  id: string
}

export type ItemsReadItemResponse = ItemPublic

export type TemplatesReadTemplateResponse = TemplatePublic

export type ChatsReadChatResponse = ChatPublic

export type MessagesReadMessageResponse = MessagePublic

export type ItemsUpdateItemData = {
  id: string
  requestBody: ItemUpdate
}

export type TemplatesUpdateTemplateData = {
  id: string
  requestBody: TemplateUpdate
}

export type ChatsUpdateChatData = {
  id: string
  requestBody: ChatUpdate
}

export type MessagesUpdateMessageData = {
  id: string
  requestBody: MessageUpdate
}

export type ItemsUpdateItemResponse = ItemPublic

export type TemplatesUpdateTemplateResponse = TemplatePublic

export type ChatsUpdateChatResponse = ChatPublic

export type MessagesUpdateMessageResponse = MessagePublic

export type ItemsDeleteItemData = {
  id: string
}

export type TemplatesDeleteTemplateData = {
  id: string
}

export type ChatsDeleteChatData = {
  id: string
}

export type MessagesDeleteMessageData = {
  id: string
}

export type ItemsDeleteItemResponse = Message

export type TemplatesDeleteTemplateResponse = Message

export type ChatsDeleteChatResponse = Message

export type MessagesDeleteMessageResponse = Message

export type LoginLoginAccessTokenData = {
  formData: Body_login_login_access_token
}

export type LoginLoginAccessTokenResponse = Token

export type LoginTestTokenResponse = UserPublic

export type LoginRecoverPasswordData = {
  email: string
}

export type LoginRecoverPasswordResponse = Message

export type LoginResetPasswordData = {
  requestBody: NewPassword
}

export type LoginResetPasswordResponse = Message

export type LoginRecoverPasswordHtmlContentData = {
  email: string
}

export type LoginRecoverPasswordHtmlContentResponse = string

export type UsersReadUsersData = {
  limit?: number
  skip?: number
}

export type UsersReadUsersResponse = UsersPublic

export type UsersCreateUserData = {
  requestBody: UserCreate
}

export type UsersCreateUserResponse = UserPublic

export type UsersReadUserMeResponse = UserPublic

export type UsersDeleteUserMeResponse = Message

export type UsersUpdateUserMeData = {
  requestBody: UserUpdateMe
}

export type UsersUpdateUserMeResponse = UserPublic

export type UsersUpdatePasswordMeData = {
  requestBody: UpdatePassword
}

export type UsersUpdatePasswordMeResponse = Message

export type UsersRegisterUserData = {
  requestBody: UserRegister
}

export type UsersRegisterUserResponse = UserPublic

export type UsersReadUserByIdData = {
  userId: string
}

export type UsersReadUserByIdResponse = UserPublic

export type UsersUpdateUserData = {
  requestBody: UserUpdate
  userId: string
}

export type UsersUpdateUserResponse = UserPublic

export type UsersDeleteUserData = {
  userId: string
}

export type UsersDeleteUserResponse = Message

export type UtilsTestEmailData = {
  emailTo: string
}

export type UtilsTestEmailResponse = Message

export type UtilsHealthCheckResponse = boolean
